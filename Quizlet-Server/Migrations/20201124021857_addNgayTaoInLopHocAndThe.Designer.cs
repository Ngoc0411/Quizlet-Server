// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quizlet_Server.Data;

namespace Quizlet_Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201124021857_addNgayTaoInLopHocAndThe")]
    partial class addNgayTaoInLopHocAndThe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Quizlet_Server.Entities.BaiKiemTra", b =>
                {
                    b.Property<int>("BaiKiemTraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HocPhanID")
                        .HasColumnType("int");

                    b.Property<string>("TenBaiKiemTra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaiKiemTraID");

                    b.HasIndex("HocPhanID");

                    b.ToTable("BaiKiemTras");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.HocPhan", b =>
                {
                    b.Property<int>("HocPhanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LopHocID")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaiKhoanID")
                        .HasColumnType("int");

                    b.Property<string>("TenHocPhan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HocPhanID");

                    b.HasIndex("LopHocID");

                    b.HasIndex("TaiKhoanID");

                    b.ToTable("HocPhans");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.LoaiTaiKhoan", b =>
                {
                    b.Property<int>("LoaiTaiKhoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiTaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiTaiKhoanID");

                    b.ToTable("LoaiTaiKhoans");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.LopHoc", b =>
                {
                    b.Property<int>("LopHocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanID")
                        .HasColumnType("int");

                    b.Property<string>("TenLopHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LopHocID");

                    b.HasIndex("TaiKhoanID");

                    b.ToTable("LopHocs");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.LopHoc_HocSinh", b =>
                {
                    b.Property<int>("LopHoc_HocSinhID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LopHocID")
                        .HasColumnType("int");

                    b.Property<int>("TaiKhoanID")
                        .HasColumnType("int");

                    b.HasKey("LopHoc_HocSinhID");

                    b.HasIndex("LopHocID");

                    b.HasIndex("TaiKhoanID");

                    b.ToTable("LopHoc_HocSinhs");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiTaiKhoanID")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaiKhoanID");

                    b.HasIndex("LoaiTaiKhoanID");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.The", b =>
                {
                    b.Property<int>("TheID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaiNghia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HocPhanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanID")
                        .HasColumnType("int");

                    b.Property<string>("ThuatNgu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TheID");

                    b.HasIndex("HocPhanID");

                    b.ToTable("Thes");
                });

            modelBuilder.Entity("Quizlet_Server.Entities.BaiKiemTra", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.HocPhan", "HocPhan")
                        .WithMany()
                        .HasForeignKey("HocPhanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quizlet_Server.Entities.HocPhan", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.LopHoc", "LopHoc")
                        .WithMany("HocPhans")
                        .HasForeignKey("LopHocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quizlet_Server.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("HocPhans")
                        .HasForeignKey("TaiKhoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quizlet_Server.Entities.LopHoc", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("LopHocs")
                        .HasForeignKey("TaiKhoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quizlet_Server.Entities.LopHoc_HocSinh", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.LopHoc", "LopHoc")
                        .WithMany("LopHoc_HocSinhs")
                        .HasForeignKey("LopHocID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quizlet_Server.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("LopHoc_HocSinhs")
                        .HasForeignKey("TaiKhoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quizlet_Server.Entities.TaiKhoan", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.LoaiTaiKhoan", "LoaiTaiKhoan")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("LoaiTaiKhoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quizlet_Server.Entities.The", b =>
                {
                    b.HasOne("Quizlet_Server.Entities.HocPhan", "HocPhan")
                        .WithMany("Thes")
                        .HasForeignKey("HocPhanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
